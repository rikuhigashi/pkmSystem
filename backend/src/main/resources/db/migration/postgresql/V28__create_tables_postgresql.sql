CREATE TABLE email_verification_token
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    expiration_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    code            VARCHAR(255) NOT NULL,
    created_at      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    email           VARCHAR(255) NOT NULL,
    user_id         INTEGER,
    PRIMARY KEY (id)
);

CREATE TABLE notification
(
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id         INTEGER,
    content         VARCHAR(255),
    created_at      TIMESTAMP WITHOUT TIME ZONE,
    expire_at       TIMESTAMP WITHOUT TIME ZONE,
    related_data_id INTEGER,
    is_read         BOOLEAN,
    PRIMARY KEY (id)
);

CREATE TABLE password_reset_tokens
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    token           VARCHAR(255) NOT NULL,
    user_id         INTEGER,
    expiration_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE payment_order
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    order_no       VARCHAR(255),
    amount         DECIMAL(10),
    subject        VARCHAR(255),
    body           VARCHAR(255),
    pay_type       VARCHAR(255),
    status         VARCHAR(255),
    user_id        INTEGER,
    create_time    TIMESTAMP WITHOUT TIME ZONE,
    expire_time    TIMESTAMP WITHOUT TIME ZONE,
    transaction_id VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE sidedata
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    icon          VARCHAR(255),
    current       BOOLEAN DEFAULT FALSE,
    href          VARCHAR(255),
    name          VARCHAR(255),
    created_at    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    updated_at    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    user_id       INTEGER,
    tiptap_json   JSON,
    expired_at    TIMESTAMP WITHOUT TIME ZONE,
    status        VARCHAR(20) DEFAULT 'PENDING',
    reject_reason TEXT,
    PRIMARY KEY (id)
);

COMMENT ON COLUMN sidedata.name IS '显示名称';
COMMENT ON COLUMN sidedata.created_at IS '创建时间';
COMMENT ON COLUMN sidedata.updated_at IS '更新时间';

CREATE TABLE "user"
(
    id             INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    password_hash  VARCHAR(60) NOT NULL,
    username       VARCHAR(100),
    role           VARCHAR(20) DEFAULT '1',
    email          VARCHAR(255),
    created_at     TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    updated_at     TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    email_verified BOOLEAN NOT NULL,
    vip_active     BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (id)
);

COMMENT ON COLUMN "user".password_hash IS '用户密码';
COMMENT ON COLUMN "user".username IS '用户名字';
COMMENT ON COLUMN "user".email IS '邮箱';
COMMENT ON COLUMN "user".created_at IS '创建时间';
COMMENT ON COLUMN "user".updated_at IS '更新时间';

-- 唯一约束
ALTER TABLE email_verification_token
    ADD CONSTRAINT uc_email_verification_token_user UNIQUE (user_id);

ALTER TABLE password_reset_tokens
    ADD CONSTRAINT uc_password_reset_tokens_token UNIQUE (token);

ALTER TABLE password_reset_tokens
    ADD CONSTRAINT uc_password_reset_tokens_user UNIQUE (user_id);

ALTER TABLE payment_order
    ADD CONSTRAINT uc_payment_order_orderno UNIQUE (order_no);

ALTER TABLE "user"
    ADD CONSTRAINT uc_user_email UNIQUE (email);

-- 索引
CREATE INDEX idx_created_at ON sidedata (created_at);
CREATE INDEX idx_status ON sidedata (status);
CREATE INDEX idx_status_created_at ON sidedata (status, created_at);

-- 外键约束（统一命名）
ALTER TABLE email_verification_token
    ADD CONSTRAINT fk_email_verification_token_user FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

ALTER TABLE notification
    ADD CONSTRAINT fk_notification_user FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

CREATE INDEX idx_notification_user ON notification (user_id);

ALTER TABLE password_reset_tokens
    ADD CONSTRAINT fk_password_reset_tokens_user FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

ALTER TABLE payment_order
    ADD CONSTRAINT fk_payment_order_user FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

CREATE INDEX idx_payment_order_user ON payment_order (user_id);

ALTER TABLE sidedata
    ADD CONSTRAINT fk_sidedata_user FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

CREATE INDEX idx_sidedata_user ON sidedata (user_id);
