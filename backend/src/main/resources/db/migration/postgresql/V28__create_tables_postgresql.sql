CREATE TABLE email_verification_token
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    expiration_time TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    code            VARCHAR(255) NOT NULL,
    created_at      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    email           VARCHAR(255) NOT NULL,
    user_id         INTEGER,
    CONSTRAINT "PRIMARY" PRIMARY KEY (id)
);

CREATE TABLE flyway_schema_history
(
    installed_rank INTEGER       NOT NULL,
    version        VARCHAR(50),
    description    VARCHAR(200)  NOT NULL,
    type           VARCHAR(20)   NOT NULL,
    script         VARCHAR(1000) NOT NULL,
    checksum       INTEGER,
    installed_by   VARCHAR(100)  NOT NULL,
    installed_on   TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    execution_time INTEGER       NOT NULL,
    success        SMALLINT      NOT NULL,
    CONSTRAINT "PRIMARY" PRIMARY KEY (installed_rank)
);

CREATE TABLE notification
(
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id         INTEGER,
    content         VARCHAR(255),
    created_at      TIMESTAMP WITHOUT TIME ZONE,
    expire_at       TIMESTAMP WITHOUT TIME ZONE,
    related_data_id INTEGER,
    is_read         BOOLEAN,
    CONSTRAINT "PRIMARY" PRIMARY KEY (id)
);

CREATE TABLE password_reset_tokens
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    token           VARCHAR(255) NOT NULL,
    user_id         INTEGER,
    expiration_time TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT "PRIMARY" PRIMARY KEY (id)
);

CREATE TABLE payment_order
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    order_no       VARCHAR(255),
    amount         DECIMAL(10),
    subject        VARCHAR(255),
    body           VARCHAR(255),
    pay_type       VARCHAR(255),
    status         VARCHAR(255),
    user_id        INTEGER,
    create_time    TIMESTAMP WITHOUT TIME ZONE,
    expire_time    TIMESTAMP WITHOUT TIME ZONE,
    transaction_id VARCHAR(255),
    CONSTRAINT "PRIMARY" PRIMARY KEY (id)
);

CREATE TABLE sidedata
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    icon          VARCHAR(255),
    current       SMALLINT    DEFAULT 0,
    href          VARCHAR(255),
    name          VARCHAR(255),
    created_at    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    updated_at    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    user_id       INTEGER,
    tiptap_json   JSON,
    expired_at    TIMESTAMP WITHOUT TIME ZONE,
    status        VARCHAR(20) DEFAULT 'PENDING',
    reject_reason TEXT,
    CONSTRAINT "PRIMARY" PRIMARY KEY (id)
);
COMMENT ON COLUMN sidedata.name IS '显示名称';
COMMENT ON COLUMN sidedata.created_at IS '创建时间';
COMMENT ON COLUMN sidedata.updated_at IS '更新时间';

CREATE TABLE "user"
(
    id             INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    password_hash  VARCHAR(60) NOT NULL,
    username       VARCHAR(100),
    role           VARCHAR(20) DEFAULT '1',
    email          VARCHAR(255),
    created_at     TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    updated_at     TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    email_verified BOOLEAN NOT NULL,
    vip_active     BOOLEAN DEFAULT FALSE,
    CONSTRAINT "PRIMARY" PRIMARY KEY (id)
);
COMMENT ON COLUMN "user".password_hash IS '用户密码';
COMMENT ON COLUMN "user".username IS '用户名字';
COMMENT ON COLUMN "user".email IS '邮箱';
COMMENT ON COLUMN "user".created_at IS '创建时间';
COMMENT ON COLUMN "user".updated_at IS '更新时间';

ALTER TABLE email_verification_token
    ADD CONSTRAINT uc_email_verification_token_user UNIQUE (user_id);

ALTER TABLE password_reset_tokens
    ADD CONSTRAINT uc_password_reset_tokens_token UNIQUE (token);

ALTER TABLE password_reset_tokens
    ADD CONSTRAINT uc_password_reset_tokens_user UNIQUE (user_id);

ALTER TABLE payment_order
    ADD CONSTRAINT uc_payment_order_orderno UNIQUE (order_no);

ALTER TABLE "user"
    ADD CONSTRAINT uc_user_email UNIQUE (email);

CREATE INDEX flyway_schema_history_s_idx ON flyway_schema_history (success);

CREATE INDEX idx_created_at ON sidedata (created_at);

CREATE INDEX idx_status ON sidedata (status);

CREATE INDEX idx_status_created_at ON sidedata (status, created_at);

ALTER TABLE email_verification_token
    ADD CONSTRAINT FK_EMAIL_VERIFICATION_TOKEN_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

ALTER TABLE notification
    ADD CONSTRAINT FK_NOTIFICATION_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

CREATE INDEX FK_NOTIFICATION_ON_USER ON notification (user_id);

ALTER TABLE password_reset_tokens
    ADD CONSTRAINT FK_PASSWORD_RESET_TOKENS_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

ALTER TABLE payment_order
    ADD CONSTRAINT FK_PAYMENT_ORDER_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

CREATE INDEX FK_PAYMENT_ORDER_ON_USER ON payment_order (user_id);

ALTER TABLE sidedata
    ADD CONSTRAINT sidedata_ibfk_1 FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE NO ACTION;

CREATE INDEX user_id ON sidedata (user_id);

DROP TABLE primarytable CASCADE;